<%- include('partials/head') %>

    <body>
        <%- include('partials/nav') %>
            <main class="container">

                <h2>Stacks</h2>
                <p class="texto">La programaci&oacute;n web es el proceso de crear y mantener sitios web o aplicaciones web. Involucra
                    una serie de tecnolog&iacute;as y disciplinas, y a menudo se divide en dos categor&iacute;as
                    principales: desarrollo web del lado del cliente (front-end) y desarrollo web del lado del servidor
                    (back-end).</p>
                <h3>Front-end</h3>
                <p  class="texto">tambi&eacute;n conocido como front-end development o desarrollo front-end, se refiere a la parte de
                    la programaci&oacute;n web que se enfoca en la interfaz de usuario y la interacci&oacute;n visual de
                    un sitio web o aplicaci&oacute;n web. Se centra en todo lo que los usuarios ven y con lo que
                    interact&uacute;an directamente en su navegador web, pero sin tocar el m&eacute;todo de
                    interacci&oacute;n o el contenido de la p&aacute;gina.</p>
                <p class="texto">El front-end est&aacute; compuesto de HTML, CSS y JS adem&aacute;s de sus bibliotecas,
                    librer&iacute;as o frameworks relacionados, como React, Angular, Vue.js y Bootstrap, que
                    proporcionan herramientas y componentes predefinidos para agilizar el desarrollo y mejorar la
                    eficiencia del desarrollo front-end.</p>
                <h3>Back-end</h3>
                <p class="texto">Tambi&eacute;n conocido como back-end development o desarrollo back-end, se refiere a la parte de la
                    programaci&oacute;n web que se ocupa de la l&oacute;gica y el funcionamiento detr&aacute;s de escena
                    de una aplicaci&oacute;n web o sitio web. Se centra en el procesamiento de datos, la gesti&oacute;n
                    de servidores, la interacci&oacute;n con bases de datos y la implementaci&oacute;n de la
                    l&oacute;gica empresarial.</p>
                <p class="texto">Los lenguajes de programaci&oacute;n comunes para el desarrollo back-end incluyen Python, Java, PHP,
                    Ruby, C#, JavaScript(JsNode) entre otros. Estos lenguajes permiten la implementaci&oacute;n de la
                    l&oacute;gica empresarial, el procesamiento de datos y la manipulaci&oacute;n de la
                    informaci&oacute;n en el servidor.</p>
                <p class="texto">El back-end est&aacute; estrechamente vinculado a las bases de datos, ya que se encarga de la
                    gesti&oacute;n y el almacenamiento de datos. Se utilizan sistemas de gesti&oacute;n de bases de
                    datos (SGBD) como MySQL, PostgreSQL, MongoDB y Oracle para almacenar y recuperar informaci&oacute;n
                    de manera eficiente. El desarrollo back-end tambi&eacute;n implica la creaci&oacute;n y
                    gesti&oacute;n de API (Application Programming Interfaces). Las API permiten la comunicaci&oacute;n
                    entre diferentes componentes de una aplicaci&oacute;n o entre diferentes aplicaciones, facilitando
                    el intercambio de datos y la integraci&oacute;n de servicios externos.</p>
                <h3>Fullstack</h3>
                <p class="texto">"Full Stack" es un t&eacute;rmino en la industria de la tecnolog&iacute;a que se refiere a un tipo de
                    desarrollador que tiene la capacidad de trabajar en todas las capas de una aplicaci&oacute;n web, es
                    decir, tanto en el front-end (la parte visible y con la que interact&uacute;an los usuarios) como en
                    el back-end (el &ldquo;trasfondo&rdquo; que se encarga de la l&oacute;gica, la gesti&oacute;n de
                    datos, autenticaci&oacute;n, etc.).</p>
                <p class="texto">Un desarrollador Full Stack debe tener una amplia gama de habilidades y ser capaz de trabajar con
                    varias tecnolog&iacute;as que normalmente se agrupan en stacks especificos.</p>
                <p class="texto">MERN Stack es una combinaci&oacute;n popular de tecnolog&iacute;as utilizadas para el desarrollo de
                    aplicaciones web modernas de Full Stack. MERN es un acr&oacute;nimo que representa:</p>
                <ul>
                    <li  class=" texto"><strong>MongoDB</strong>: Una base de datos NoSQL orientada a documentos. MongoDB es ideal para
                        el desarrollo de aplicaciones de alto rendimiento, proporciona alta disponibilidad y es
                        f&aacute;cil de escalar.</li>
                    <li class=" texto"><strong>Express.js</strong>: Un marco de trabajo minimalista y flexible para Node.js que
                        proporciona un conjunto robusto de caracter&iacute;sticas para desarrollar aplicaciones web y
                        m&oacute;viles. Esencialmente, se utiliza para configurar las rutas y los endpoints del
                        servidor.</li>
                    <li class=" texto"><strong>React.js</strong>: Una biblioteca de JavaScript para construir interfaces de usuario. Es
                        mantenida por Facebook y es muy popular debido a su eficiencia y su modelo de
                        programaci&oacute;n flexible basado en componentes.</li>
                    <li class=" texto"><strong>Node.js</strong>: Un entorno de ejecuci&oacute;n de JavaScript en el servidor,
                        construido en el motor JavaScript V8 de Chrome. Node.js utiliza un modelo de I/O
                        (entrada/salida) no bloqueante y orientado a eventos, lo que lo hace ligero y eficiente.</li>
                </ul>
                <p class="texto">La ventaja de usar MERN Stack es que todo el flujo de trabajo, desde la base de datos hasta el
                    usuario final, utiliza JavaScript. Esto puede hacer que el desarrollo y la gesti&oacute;n del
                    c&oacute;digo sean m&aacute;s sencillos, ya que se utiliza un solo lenguaje en todas las partes de
                    la aplicaci&oacute;n.</p>
            </main>
            <%- include('partials/footer') %>
                <script src="/js/app.js"></script>
    </body>

    </html>